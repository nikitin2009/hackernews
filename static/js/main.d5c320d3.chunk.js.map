{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["largeColumn","width","midColumn","smallColumn","DEFAULT_QUERY","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","POINTS","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","results","searchKey","searchTerm","error","isLoading","needsToSearchTopStories","bind","assertThisInitialized","setSearchTopStories","fetchSearchTopStories","onSearchChange","onSearchSubmit","onDismiss","setState","result","hits","page","prevState","oldHits","updatedHits","concat","toConsumableArray","objectSpread","defineProperty","updateSearchTopStoriesState","_this2","arguments","length","undefined","axios","then","data","catch","event","target","value","preventDefault","id","_this$state","_results$searchKey","filter","item","objectID","_this3","_this$state2","react_default","a","createElement","className","App_Search","onChange","onSubmit","App_Table","ButtonWithLoading","onClick","Component","Search","input","focus","_this4","_this$props","children","type","ref","el","Table","_this5","sortKey","isSortReverse","onSort","_this$props2","_this$state3","sortedList","reverseSortedList","reverse","style","App_Sort","activeSortKey","map","key","href","url","title","author","num_comments","points","App_Button","Button","_ref","defaultProps","Loading","_ref2","rest","objectWithoutProperties","App_Loading","Sort","_ref3","sortClass","classNames","button-active","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5c320d3.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport { sortBy } from 'lodash';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nconst largeColumn = {\n  width: '40%',\n};\n\nconst midColumn = {\n  width: '30%',\n};\n\nconst smallColumn = {\n  width: '10%',\n};\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, 'title'),\n  AUTHOR: list => sortBy(list, 'author'),\n  COMMENTS: list => sortBy(list, 'num_comments'),\n  POINTS: list => sortBy(list, 'pints')\n}\n\nconst updateSearchTopStoriesState = (hits, page) => (prevState) => {\n\n  const {searchKey, results} = prevState;\n  \n  const oldHits = results && results[searchKey]\n    ? results[searchKey].hits\n    : [];\n  const updatedHits = [\n    ...oldHits,\n    ...hits\n  ];\n  return {\n    results: {\n      ...results,\n      [searchKey]: { hits: updatedHits, page }\n    },\n    isLoading: false\n  };\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      error: null,\n      isLoading: false\n    };\n\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  needsToSearchTopStories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  setSearchTopStories(result) {\n    const { hits, page } = result;\n\n    this.setState(updateSearchTopStoriesState(hits, page));\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    this.setState({ isLoading: true });\n\n    axios(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(result => this.setSearchTopStories(result.data))\n      .catch(error => this.setState({ error }));\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onSearchSubmit(event) {\n    event.preventDefault();\n    \n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n  }\n\n  onDismiss(id) {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: { hits:updatedHits, page } }\n    });\n  }\n\n  render() {\n    const { \n      searchTerm,\n      results,\n      searchKey,\n      error,\n      isLoading,\n    } = this.state;\n\n    const page = (\n      results &&\n      results[searchKey] &&\n      results[searchKey].page\n    ) || 0;\n\n    const list = (\n      results &&\n      results[searchKey] &&\n      results[searchKey].hits\n    ) || [];\n    \n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        { error\n          ? <div className=\"interactions\">\n            <p>Something went wrong.</p>\n          </div>\n          : <Table\n              list={list}\n              onDismiss={this.onDismiss}\n            />\n        }\n        <div className=\"interactions\">\n          <ButtonWithLoading\n            isLoading={isLoading}\n            onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}>\n            More\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Search extends Component {\n  \n  componentDidMount() {\n    if (this.input) {\n      this.input.focus();\n    }\n  }\n\n  render() {\n\n    const { \n      value, \n      onChange,\n      onSubmit,\n      children \n    } = this.props;\n\n    return (\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          ref={el => this.input = el}\n        />\n        <button type=\"submit\">\n          {children}\n        </button>\n      </form>\n    )\n  }\n}\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sortKey: 'NONE',\n      isSortReverse: false\n    };\n\n    this.onSort = this.onSort.bind(this);\n  }\n\n  onSort(sortKey) {\n    const isSortReverse = this.state.sortKey === sortKey\n                        && !this.state.isSortReverse;\n    this.setState({ sortKey, isSortReverse });\n  }\n\n  render() {\n    const { \n      list,\n      onDismiss\n    } = this.props;\n\n    const {\n      sortKey,\n      isSortReverse\n    } = this.state;\n\n    const sortedList = SORTS[sortKey](list);\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\n\n    return (\n      <div className=\"table\">\n        <div className=\"table-header\">\n          <span style={{ width: '40%' }}>\n            <Sort\n              sortKey={'TITLE'}\n              onSort={this.onSort}\n              activeSortKey={sortKey}\n            >\n              Title\n            </Sort>\n          </span>\n          <span style={{ width: '30%' }}>\n            <Sort\n              sortKey={'AUTHOR'}\n              onSort={this.onSort}\n              activeSortKey={sortKey}\n            >\n              Author\n            </Sort>\n          </span>\n          <span style={{ width: '10%' }}>\n            <Sort\n              sortKey={'COMMENTS'}\n              onSort={this.onSort}\n              activeSortKey={sortKey}\n            >\n              Comments\n            </Sort>\n          </span>\n          <span style={{ width: '10%' }}>\n            <Sort\n              sortKey={'POINTS'}\n              onSort={this.onSort}\n              activeSortKey={sortKey}\n            >\n              Points\n            </Sort>\n          </span>\n          <span style={{ width: '10%' }}>\n            Archive\n          </span>\n        </div>\n        { reverseSortedList.map(item =>\n          <div key={item.objectID}  className=\"table-row\">\n            <span style={largeColumn}>\n              <a href={item.url}>{item.title}</a>\n            </span>\n            <span style={midColumn}>\n              {item.author}\n            </span>\n            <span style={smallColumn}>\n              {item.num_comments}\n            </span>\n            <span style={smallColumn}>\n              {item.points}\n            </span>\n            <span style={smallColumn}>\n              <Button\n                onClick={() => onDismiss(item.objectID)}\n                className=\"button-inline\"\n              >\n                Dismiss\n              </Button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  list: PropTypes.array.isRequired,\n  onDismiss: PropTypes.func.isRequired\n}\n\nconst Button = ({\n    onClick,\n    className,\n    children,\n  }) =>\n    <button\n      onClick={onClick}\n      className={className}\n      type=\"button\"\n    >\n      {children}\n    </button>\n\nButton.defaultProps = {\n  className: ''\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nconst Loading = () => <div>Loading ...</div>;\n\nconst withLoading = Component => ({isLoading, ...rest}) =>\n  isLoading\n    ? <Loading />\n    : <Component { ...rest } />;\n\nconst ButtonWithLoading = withLoading(Button);\n\nconst Sort = ({\n  sortKey,\n  onSort,\n  children,\n  activeSortKey\n}) => {\n  const sortClass = classNames(\n    'button-inline',\n    { 'button-active': sortKey === activeSortKey }\n  );\n\n  return (\n    <Button\n      onClick={() => onSort(sortKey)}\n      className={sortClass}\n    >\n      {children}\n    </Button>\n  );\n}\n\nexport default App;\n\nexport {\n  Button,\n  Search,\n  Table\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}